{"version":3,"sources":["node_modules/bleuio/index.js","index.js"],"names":["document","getElementById","addEventListener","my_dongle","at_connect","ati","then","data","console","log","at_central","at_gapscan","parseSensorData","input","counter","includes","sensorData","sensorid","pressure","parseInt","temperature","humidity","voc","als","pm1","pm25","pm10","sendDataToCloud","at_scantarget","theAdvData","filter","element","length","advData","split","airQualityData","database","firebase","ref","push","intervalId","clearInterval","setInterval","innerHTML","stop"],"mappings":"AAAA;AACA;ACDA,ADEA;AACA;AACA;AACA;AACA;AACA;ACNAA,ADOA,QCPQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,gBAAnC,CAAoD,OAApD,EAA6D,YAAU;AACrEC,ADOF,ECPEA,SAAS,CAACC,UAAV;AACD,ADOD,CCTA;AAGAJ,ADOA,QCPQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,gBAAtC,CAAuD,OAAvD,EAAgE,YAAU;AACxEC,ADOF,ECPEA,SAAS,CAACE,GAAV,GAAgBC,IAAhB,CAAqB,UAACC,IAAD;AAAA,ADQvB,WCR+BC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAR;AAAA,ADSvB,GCTE;AACD,ADSD,CCXA;AAGAP,ADSA,QCTQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,gBAAnC,CAAoD,OAApD,EAA6D,YAAU;AACnEC,ADSJ,ECTIA,SAAS,CAACO,UAAV,GAAuBJ,IAAvB,CAA4B,UAACC,IAAD;AAAA,ADUhC,WCVwCC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAR;AAAA,ADWhC,GCXI;AACH,ADWD,CCbA;AAGAP,ADWA,QCXQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,gBAAhC,CAAiD,OAAjD,EAA0D,YAAU;AACpEC,ADWA,ECXAA,SAAS,CAACQ,UAAV,CAAqB,CAArB,EAAwBL,IAAxB,CAA6B,UAACC,IAAD;AAAA,ADY7B,WCZqCC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAR;AAAA,ADa7B,GCbA;AACC,ADaD,CCfA;ADgBA;ACbA,ADcA,ICdMK,eAAe,GAAI,SAAnBA,eAAmB,CAACC,KAAD,EAAU;AAC/B,ADcJ,MCdQC,OAAO,GAAG,EAAd;ADeJ;ACdI,ADeJ,MCfQD,KAAK,CAACE,QAAN,CAAe,UAAf,CAAJ,EAAgC;AAC9BD,ADeN,ICfMA,OAAO,GAAG,EAAV;AACD,ADeL;AACA;ACfI,ADgBJ,MChBQE,UAAU,GAAG;AACfC,ADgBN,IChBMA,QAAQ,EACNJ,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,GACAD,KAAK,CAACC,OAAO,GAAG,CAAX,CADL,GAEAD,KAAK,CAACC,OAAO,GAAG,CAAX,CAFL,GAGAD,KAAK,CAACC,OAAO,GAAG,CAAX,CAHL,GAIAD,KAAK,CAACC,OAAO,GAAG,CAAX,CAJL,GAKAD,KAAK,CAACC,OAAO,GAAG,CAAX,CAPQ;AAQfI,ADUN,ICVMA,QAAQ,EACNC,QAAQ,CACNN,KAAK,CAACC,OAAO,GAAG,EAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,EAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,EAAX,CAJD,EAKN,EALM,CAAR,GAMI,EAfS;AAgBfM,ADGN,ICHMA,WAAW,EACTD,QAAQ,CACNN,KAAK,CAACC,OAAO,GAAG,EAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,EAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,EAAX,CAJD,EAKN,EALM,CAAR,GAMI,EAvBS;AAwBfO,ADJN,ICIMA,QAAQ,EACNF,QAAQ,CACNN,KAAK,CAACC,OAAO,GAAG,EAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,EAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,EAAX,CAJD,EAKN,EALM,CAAR,GAMI,EA/BS;AAgCbQ,ADXR,ICWQA,GAAG,EACHH,QAAQ,CACNN,KAAK,CAACC,OAAO,GAAG,EAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,EAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,EAAX,CAJD,EAKN,EALM,CAAR,GAMI,EAvCS;AAwCfS,ADlBN,ICkBMA,GAAG,EAAEJ,QAAQ,CACXN,KAAK,CAACC,OAAO,GAAG,CAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,CAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,CAAX,CAJI,EAKX,EALW,CAxCE;AA+CfU,ADxBN,ICwBMA,GAAG,EACDL,QAAQ,CACNN,KAAK,CAACC,OAAO,GAAG,EAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,EAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,EAAX,CAJD,EAKN,EALM,CAAR,GAMI,EAtDS;AAuDfW,AD/BN,IC+BMA,IAAI,EACFN,QAAQ,CACNN,KAAK,CAACC,OAAO,GAAG,EAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,EAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,EAAX,CAJD,EAKN,EALM,CAAR,GAMI,EA9DS;AA+DfY,ADtCN,ICsCMA,IAAI,EACFP,QAAQ,CACNN,KAAK,CAACC,OAAO,GAAG,EAAX,CAAL,GACED,KAAK,CAACC,OAAO,GAAG,EAAX,CADP,GAEED,KAAK,CAACC,OAAO,GAAG,EAAX,CAFP,GAGED,KAAK,CAACC,OAAO,GAAG,EAAX,CAJD,EAKN,EALM,CAAR,GAMI;AAtES,AD0BrB,GC1BI;AAuEA,AD5CJ,SC4CWE,UAAP;AACD,AD5CH,CCjCA;ADkCA;AC6CA,AD5CA,IC4CMW,eAAe,GAAI,SAAnBA,eAAmB,GAAI;AACzBxB,AD5CJ,EC4CIA,SAAS,CAACyB,aAAV,CAAwB,sBAAxB,EAA+C,CAA/C,EAAkDtB,IAAlD,CAAuD,UAACC,IAAD,EAAQ;AAC3D,AD5CR,QC4CYsB,UAAU,GAAGtB,IAAI,CAACuB,MAAL,CAAY,UAAAC,OAAO;AAAA,AD3C5C,aC2CgDA,OAAO,CAAChB,QAAR,CAAiB,KAAjB,CAAJ;AAAA,AD1C5C,KC0CyB,CAAjB;ADzCR;AC0CQ,ADzCR,QCyCWc,UAAU,IAAIA,UAAU,CAACG,MAAX,GAAkB,CAAnC,EAAqC;AACjCxB,ADzCZ,MCyCYA,OAAO,CAACC,GAAR,CAAYoB,UAAZ;AACA,ADzCZ,UCyCgBI,OAAO,GAAGJ,UAAU,CAAC,CAAD,CAAV,CAAcK,KAAd,CAAoB,SAApB,CAAd,CAFiC,CAGjC;AACA,AD1CZ;AACA;AC0CY,ADzCZ,UCyCgBC,cAAc,GAAGvB,eAAe,CAACqB,OAAO,CAAC,CAAD,CAAR,CAApC;AACAzB,ADzCZ,MCyCYA,OAAO,CAACC,GAAR,CAAY0B,cAAZ,EANiC,CAOjC;ADzCZ;AC0CY,ADzCZ,UCyCgBC,QAAQ,GAAGC,QAAQ,CAACD,QAAT,EAAf,CARiC,CAQG;ADxChD;ACyCY,ADxCZ,UCwCgBE,GAAG,GAAGF,QAAQ,CAACE,GAAT,CAAa,SAAb,CAAV,CATiC,CAUjC;ADxCZ;ACyCYA,ADxCZ,MCwCYA,GAAG,CAACC,IAAJ,CAASJ,cAAT;AACH,ADxCT;ACyCK,ADxCL,GCyBI;AAgBH,ADxCD,CCuBA;ADtBA;ACwCA,ADvCA,ICuCIK,UAAJ;AACAxC,ADvCA,QCuCQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,gBAA7C,CAA8D,OAA9D,EAAuE,YAAU;AAC7EyB,ADvCJ,ECuCIA,eAAe;ADtCnB;ACuCI,ADtCJ,MCsCQa,UAAJ,EAAgB;AACZC,ADtCR,ICsCQA,aAAa,CAACD,UAAD,CAAb;AACH,ADtCL;AACA;ACsCIA,ADrCJ,ECqCIA,UAAU,GAAGE,WAAW,CAACf,eAAD,EAAkB,IAAlB,CAAxB;AACA3B,ADrCJ,ECqCIA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+B0C,SAA/B,GAAyC,qEAAzC;AAEH,ADtCD,CC8BA;AASA3C,ADtCA,QCsCQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,gBAA3C,CAA4D,OAA5D,EAAqE,YAAU;AAC3EuC,ADtCJ,ECsCIA,aAAa,CAACD,UAAD,CAAb;AACAxC,ADtCJ,ECsCIA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+B0C,SAA/B,GAAyC,uBAAzC;AACF,ADtCF,CCmCA;AAIA3C,ADtCA,QCsCQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,gBAAvC,CAAwD,OAAxD,EAAiE,YAAU;AACxEM,ADtCH,ECsCGA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACyC,IAAV,EAAZ;AACF,ADtCD,CCoCA;ADnfile":"bleuio firebase.e31bb0bc.js","sourceRoot":"..","sourcesContent":["let port,\r\n    reader,\r\n    inputDone,\r\n    outputDone,\r\n    inputStream,\r\n    outputStream,\r\n    arr = [];\r\nasync function connect() {\r\n    (port = await navigator.serial.requestPort()), await port.open({ baudRate: 9600 });\r\n    const t = new TextEncoderStream();\r\n    (outputDone = t.readable.pipeTo(port.writable)), (outputStream = t.writable);\r\n    let e = new TextDecoderStream();\r\n    (inputDone = port.readable.pipeTo(e.writable)), (inputStream = e.readable.pipeThrough(new TransformStream(new LineBreakTransformer()))), (reader = inputStream.getReader());\r\n}\r\nasync function disconnect() {\r\n    return (\r\n        reader && (await reader.cancel(), await inputDone.catch(() => {}), (reader = null), (inputDone = null)),\r\n        outputStream && (await outputStream.getWriter().close(), await outputDone, (outputStream = null), (outputDone = null)),\r\n        await port.close(),\r\n        (port = null),\r\n        \"Dongle Disconnected!\"\r\n    );\r\n}\r\nfunction writeCmd(t) {\r\n    const e = outputStream.getWriter();\r\n    e.write(t), \"\u0003\" !== t && e.write(\"\\r\"), e.releaseLock();\r\n}\r\n/**\r\n * @at_connect\r\n * Connects Device\r\n*/\r\n(exports.at_connect = async function () {\r\n    return await connect(), \"device connected\";\r\n}),\r\n/**\r\n * @at_connect\r\n * Disconnects Device\r\n*/\r\n(exports.at_disconnect = async function () {\r\n    return await disconnect(), \"device disconnected\";\r\n}),\r\n/**\r\n * @ati\r\n * Device information query.\r\n * @return {Promise} returns promise\r\n * \r\n*/\r\n    (exports.ati = () => (port ? (writeCmd(\"ATI\"), readLoop(\"ati\")) : \"Device not connected.\")),\r\n/**\r\n * @at_central\r\n * Sets the device Bluetooth role to central role.\r\n * @return {Promise} returns promise\r\n * \r\n*/  \r\n(exports.at_central = function () {\r\n    return writeCmd(\"AT+CENTRAL\"), readLoop(\"at_central\");\r\n}),\r\n/**\r\n * @at_peripheral\r\n * Sets the device Bluetooth role to peripheral.\r\n * @return {Promise} returns promise\r\n * \r\n*/ \r\n(exports.at_peripheral = function () {\r\n    return writeCmd(\"AT+PERIPHERAL\"), readLoop(\"at_peripheral\");\r\n}),\r\n/**\r\n * @atr\r\n * Trigger platform reset.\r\n * @return {Promise} returns promise\r\n * \r\n*/\r\n(exports.atr = function () {\r\n    return writeCmd(\"ATR\"), readLoop(\"atr\");\r\n}),\r\n/**\r\n * @at_advstart\r\n * Starts advertising .\r\n * @return {Promise} returns promise\r\n * \r\n*/\r\n(exports.at_advstart = function () {\r\n    return writeCmd(\"AT+ADVSTART\"), readLoop(\"at_advstart\");\r\n}),\r\n/**\r\n * @at_advstop\r\n * Stops advertising .\r\n * @return {Promise} returns promise\r\n * \r\n*/\r\n(exports.at_advstop = function () {\r\n    return writeCmd(\"AT+ADVSTOP\"), readLoop(\"at_advstop\");\r\n}),\r\n/**\r\n * @at_advdata\r\n * Sets or queries the advertising data.if left empty it will query what advdata is set. \r\n * @param {string} t hex str format: xx:xx:xx:xx:xx.. (max 31 bytes)\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_advdata = (t) => (writeCmd(t ? \"AT+ADVDATA=\" + t : \"AT+ADVDATA\"), readLoop(\"at_advdata\"))),\r\n/**\r\n * @at_advdatai\r\n * Sets advertising data in a way that lets it be used as an iBeacon.\r\n        Format = (UUID)(MAJOR)(MINOR)(TX)\r\n        Example: at_advdatai(5f2dd896-b886-4549-ae01-e41acd7a354a0203010400).\r\n * @param {string} t  if left empty it will query what advdata is set\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_advdatai = function (t) {\r\n    return writeCmd(\"AT+ADVDATAI=\" + t), readLoop(\"at_advdatai\");\r\n}),\r\n/**\r\n * @at_advresp\r\n *  Sets or queries scan response data. Data must be provided as hex string.\r\n * @param {string} t if left empty it will query what advdata is set.hex str format: xx:xx:xx:xx:xx.. (max 31 bytes)\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_advresp = function (t) {\r\n    return writeCmd(t ? \"AT+ADVRESP=\" + t : \"AT+ADVRESP\"), readLoop(\"at_advresp\");\r\n}),\r\n/**\r\n * @at_gapscan\r\n * Starts a Bluetooth device scan with or without timer set in seconds. If no timer is set, it will scan for only 1 second.\r\n * @param {number} t int (time in seconds)\r\n * @param {boolean} e true/false, true will show real time device in console\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_gapscan = function (t = 1,e=true) {\r\n    return writeCmd(\"AT+GAPSCAN=\" + t), readLoop(\"at_gapscan\",e);\r\n}),\r\n/**\r\n * @at_gapconnect\r\n * Initiates a connection with a specific slave device.\r\n * @param {string} t hex str format: xx:xx:xx:xx:xx:xx\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_gapconnect = function (t) {\r\n    return writeCmd(\"AT+GAPCONNECT=\" + t), readLoop(\"at_gapconnect\");\r\n}),\r\n/**\r\n * @at_gapdisconnect\r\n * Disconnects from a peer Bluetooth device.\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_gapdisconnect = function () {\r\n    return writeCmd(\"AT+GAPDISCONNECT\"), readLoop(\"at_gapdisconnect\");\r\n}),\r\n/**\r\n * @at_scantarget\r\n * Scan a target device. Displaying it's advertising and response data as it updates.\r\n * @param {string} t hex str format: xx:xx:xx:xx:xx:xx\r\n * @param {Number} e Number of responses\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_scantarget = function (t, e = 1) {\r\n    return writeCmd(\"AT+SCANTARGET=\" + t), readLoop(\"at_scantarget\", e+2);\r\n}),\r\n/**\r\n * @at_spssend\r\n * Send a message or data via the SPS profile.Without parameters it opens a stream for continiously sending data.\r\n * @param {string} t if left empty it will open Streaming mode\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_spssend = function (t) {\r\n        return writeCmd(t ? \"AT+SPSSEND=\" + t : \"AT+SPSSEND\"),  readLoop(\"at_spssend\");\r\n}),\r\n/**\r\n * @at_gapstatus\r\n * Reports the Bluetooth role.\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.at_gapstatus = function () {\r\n    return writeCmd(\"AT+GAPSTATUS\"), readLoop(\"at_gapstatus\");\r\n}),\r\n/**\r\n * @help\r\n * Shows all AT-Commands.\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.help = function () {\r\n    return writeCmd(\"--H\"), readLoop(\"help\");\r\n}),\r\n/**\r\n * @stop\r\n * Stops Current process.\r\n * @return {Promise} returns a promise\r\n * \r\n*/\r\n(exports.stop = function () {\r\n    return writeCmd(\"\u0003\"), \"Process Stopped\";\r\n});\r\nclass LineBreakTransformer {\r\n    constructor() {\r\n        this.container = \"\";\r\n    }\r\n    transform(t, e) {\r\n        this.container += t;\r\n        const r = this.container.split(\"\\r\\n\");\r\n        (this.container = r.pop()), r.forEach((t) => e.enqueue(t));\r\n    }\r\n    flush(t) {\r\n        t.enqueue(this.container);\r\n    }\r\n}\r\nasync function readLoop(t, e) {\r\n    for (arr = []; ; ) {\r\n        const { done: r, value: a } = await reader.read();\r\n        switch ((a && arr.push(a), t)) {\r\n\r\n            case \"ati\":\r\n                if (arr.includes(\"Not Advertising\") || arr.includes(\"Advertising\")) return arr;\r\n                break;\r\n            case \"at_central\":\r\n                return \"Central Mode\";\r\n            case \"at_peripheral\":\r\n                return \"Peripheral Mode\";\r\n            case \"at_advstart\":\r\n                return \"Advertising\";\r\n            case \"at_advstop\":\r\n                return \"Advertising Stopped\";\r\n            case \"at_advdata\":\r\n            case \"at_advdatai\":\r\n            case \"at_advresp\":\r\n                if (2 == arr.length) return arr;\r\n                break;\r\n            case \"atr\":\r\n                return \"Trigger platform reset\";\r\n            case \"at_gapscan\":\r\n                if(e===true)\r\n                    arr.some(function(v){ if (v.indexOf(\"RSSI\")>=0 && a!='') console.log(a) })\r\n                if (arr.includes(\"SCAN COMPLETE\")) return arr;\r\n                break;\r\n            case \"at_scantarget\":\r\n                if (arr.length == e) {\r\n                    const t = outputStream.getWriter();\r\n                    return t.write(\"\\x03\"), t.releaseLock(), arr.slice(2);\r\n                }\r\n                break;\r\n            case \"at_gapstatus\":\r\n                if (arr.includes(\"Not Advertising\") || arr.includes(\"Advertising\")) return arr;\r\n                break;\r\n            case \"at_gapconnect\":\r\n                if (arr.includes(\"CONNECTED.\") || arr.includes(\"DISCONNECTED.\") || arr.includes(\"ERROR\")) return arr;\r\n                break;\r\n            case \"at_gapdisconnect\":\r\n                return \"Disconnected.\";\r\n            case \"at_spssend\":                \r\n            if (arr.includes(\"[Sent]\"))\r\n                return arr.slice((arr.length - 3), arr.length);\r\n            case \"help\":\r\n                if (arr.includes(\"[A] = Usable in All Roles\")) return arr;\r\n                break;\r\n            default:\r\n                return \"Nothing!\";\r\n        }\r\n    }\r\n}","import * as my_dongle from 'bleuio'\r\ndocument.getElementById('connect').addEventListener('click', function(){\r\n  my_dongle.at_connect()\r\n})\r\ndocument.getElementById('deviceinfo').addEventListener('click', function(){\r\n  my_dongle.ati().then((data)=>console.log(data))\r\n})\r\ndocument.getElementById('central').addEventListener('click', function(){\r\n    my_dongle.at_central().then((data)=>console.log(data))\r\n})\r\ndocument.getElementById('scan').addEventListener('click', function(){\r\nmy_dongle.at_gapscan(2).then((data)=>console.log(data))\r\n})\r\nconst parseSensorData = ((input) =>{\r\n    let counter = 13;\r\n    if (input.includes(\"5B070503\")) {\r\n      counter = 17;\r\n    }\r\n    let sensorData = {\r\n      sensorid:\r\n        input[counter + 1] +\r\n        input[counter + 2] +\r\n        input[counter + 3] +\r\n        input[counter + 4] +\r\n        input[counter + 5] +\r\n        input[counter + 6],\r\n      pressure:\r\n        parseInt(\r\n          input[counter + 13] +\r\n            input[counter + 14] +\r\n            input[counter + 11] +\r\n            input[counter + 12],\r\n          16\r\n        ) / 10,\r\n      temperature:\r\n        parseInt(\r\n          input[counter + 17] +\r\n            input[counter + 18] +\r\n            input[counter + 15] +\r\n            input[counter + 16],\r\n          16\r\n        ) / 10,\r\n      humidity:\r\n        parseInt(\r\n          input[counter + 21] +\r\n            input[counter + 22] +\r\n            input[counter + 19] +\r\n            input[counter + 20],\r\n          16\r\n        ) / 10,\r\n        voc:\r\n        parseInt(\r\n          input[counter + 25] +\r\n            input[counter + 26] +\r\n            input[counter + 23] +\r\n            input[counter + 24],\r\n          16\r\n        ) / 10,\r\n      als: parseInt(\r\n        input[counter + 9] +\r\n          input[counter + 10] +\r\n          input[counter + 7] +\r\n          input[counter + 8],\r\n        16\r\n      ),\r\n      pm1:\r\n        parseInt(\r\n          input[counter + 29] +\r\n            input[counter + 30] +\r\n            input[counter + 27] +\r\n            input[counter + 28],\r\n          16\r\n        ) / 10,\r\n      pm25:\r\n        parseInt(\r\n          input[counter + 33] +\r\n            input[counter + 34] +\r\n            input[counter + 31] +\r\n            input[counter + 32],\r\n          16\r\n        ) / 10,\r\n      pm10:\r\n        parseInt(\r\n          input[counter + 37] +\r\n            input[counter + 38] +\r\n            input[counter + 35] +\r\n            input[counter + 36],\r\n          16\r\n        ) / 10}\r\n    return sensorData\r\n  })\r\n\r\nconst sendDataToCloud = (()=>{\r\n    my_dongle.at_scantarget('[1]F9:0D:35:E7:72:65',2).then((data)=>{\r\n        let theAdvData = data.filter(element => element.includes(\"ADV\"));\r\n        if(theAdvData && theAdvData.length>0){\r\n            console.log(theAdvData)\r\n            let advData = theAdvData[0].split(\"[ADV]: \")\r\n            // converting advertising string to meaningfull numbers \r\n            //and pass it to an array of objects\r\n            let airQualityData = parseSensorData(advData[1])\r\n            console.log(airQualityData)\r\n            // save the data to database \r\n            let database = firebase.database(); // which gets the database \r\n            let ref = database.ref(\"records\");\r\n            //pushing the object to the reference\r\n            ref.push(airQualityData)\r\n        }\r\n    })\r\n})\r\nvar intervalId\r\ndocument.getElementById('sendDataTCloudBtn').addEventListener('click', function(){\r\n    sendDataToCloud()\r\n    if (intervalId) {\r\n        clearInterval(intervalId);\r\n    }\r\n    intervalId = setInterval(sendDataToCloud ,5000);\r\n    document.getElementById(\"log\").innerHTML=\"Sending data to cloud. Click stop sending data to stop the process.\";\r\n\r\n})\r\ndocument.getElementById('stopSendingData').addEventListener('click', function(){\r\n    clearInterval(intervalId)\r\n    document.getElementById(\"log\").innerHTML=\"Sending data stopped.\";\r\n })\r\ndocument.getElementById('stopProcess').addEventListener('click', function(){\r\n   console.log(my_dongle.stop()) \r\n})\r\n\r\n"]}